<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	<!-- ========================= [Auth] ========================= -->
	<!-- 로그인: admin_number 반환 -->
	<select id="login" parameterType="com.wt.app.dto.AdminLoginDTO"
		resultType="int">
		SELECT admin_number
		FROM tbl_admin
		WHERE admin_id =
		#{adminId}
		AND admin_password = #{adminPassword}
	</select>
	<select id="getAdminName" parameterType="int"
		resultType="string">
		SELECT admin_name
		FROM tbl_admin
		WHERE admin_number =
		#{value}
	</select>
	<!-- ==================== [Care: 가입신청/조회] ==================== -->
	<!-- 대기 목록 (페이지네이션: offset, limit) -->
	<select id="carePendingListPaged" parameterType="map"
		resultType="com.wt.app.dto.AdminCareSignupDTO"><![CDATA[
  SELECT *
  FROM (
    SELECT ROWNUM AS rnum, inner_t.*
    FROM (
      SELECT
        u.users_number,
        u.users_id,
        u.users_created_date,
        u.users_name,
        u.users_email,
        u.users_phone,
        u.users_postsal_code,
        u.users_address_line1,
        u.users_address_line2,
        c.care_intro_text,
        c.care_certificate_files_num,
        c.care_passbook_files_num,
        c.care_profiles_photo_number,
        c.care_accept
      FROM tbl_care_users c
      JOIN tbl_users u ON u.users_number = c.users_number
      WHERE c.care_accept = 'W'
      ORDER BY u.users_created_date DESC, u.users_number DESC
    ) inner_t
  )
  WHERE rnum BETWEEN #{startRow} AND #{endRow}
]]></select>

	<!-- 대기 총 개수 -->
	<select id="carePendingCount" resultType="int"><![CDATA[
    SELECT COUNT(*)
    FROM tbl_care_users c
    JOIN tbl_users u ON u.users_number = c.users_number
    WHERE c.care_accept = 'W'
  ]]></select>

	<!-- 단건 조회 (users_number) -->
	<select id="careSignupOne" parameterType="int"
		resultType="com.wt.app.dto.AdminCareSignupDTO"><![CDATA[
		SELECT
		u.users_number, u.users_id, u.users_created_date,
    	u.users_name, u.users_email, u.users_phone,
	    u.users_postsal_code, u.users_address_line1, u.users_address_line2,
    	c.care_intro_text, c.care_certificate_files_num,
    	c.care_passbook_files_num, c.care_profiles_photo_number, c.care_accept
    	FROM tbl_care_users c
  		JOIN tbl_users u ON u.users_number = c.users_number
  		WHERE c.users_number = #{value}
]]></select>

	<!-- 승인/반려 -->
	<update id="careApprove" parameterType="int"><![CDATA[
    UPDATE tbl_care_users
       SET care_accept = 'Y'
     WHERE users_number = #{value}
  ]]></update>

	<delete id="careReject" parameterType="int"><![CDATA[
    DELETE FROM tbl_care_users
     WHERE users_number = #{value}
  ]]></delete>

	<delete id="careRejectAll" parameterType="int"><![CDATA[
    DELETE FROM tbl_users
     WHERE users_number = #{value}
  ]]></delete>

	<!-- ==================== [Care: 파일 조회] ==================== -->
	<select id="careFileLicense" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
    SELECT
      license_files_number, license_files_type,
      license_files_name, license_files_path, license_files_size_bytes,
      TO_CHAR(license_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
    FROM tbl_files_license
    WHERE license_files_number = #{value}
  ]]></select>

	<select id="careFileAccount" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
    SELECT
      account_files_number, account_files_type, account_files_name,
      account_files_path, account_files_size_bytes,
      TO_CHAR(account_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
    FROM tbl_files_account
    WHERE account_files_number = #{value}
  ]]></select>

	<select id="careFileProfile" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
    SELECT
      profiles_files_number, profiles_files_type,
      profiles_files_name, profiles_files_size_bytes,
      TO_CHAR(profiles_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
    FROM tbl_files_profiles
    WHERE profiles_files_number = #{value}
  ]]></select>

	<!-- ==================== [파일: 공용 다운로드] ==================== -->
	<select id="fileDownloadLicense" parameterType="int"
		resultType="com.wt.app.dto.AdminFileDownloadDTO"><![CDATA[
    SELECT
      license_files_number, license_files_name, license_files_path,
      license_files_type, license_files_size_bytes,
      TO_CHAR(license_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
    FROM tbl_files_license
    WHERE license_files_number = #{value}
  ]]></select>

	<select id="fileDownloadAccount" parameterType="int"
		resultType="com.wt.app.dto.AdminFileDownloadDTO"><![CDATA[
    SELECT
      account_files_number, account_files_name, account_files_path,
      account_files_type, account_files_size_bytes,
      TO_CHAR(account_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
    FROM tbl_files_account
    WHERE account_files_number = #{value}
  ]]></select>

	<!-- (선택) 자격증 파일 업로드: seq_files 사용 -->
	<insert id="careInsertLicenseFile"
		parameterType="com.wt.app.dto.FilesLicenseDTO">
		INSERT INTO tbl_files_license (
		license_files_number,
		license_files_type, license_files_name,
		license_files_path,
		license_files_size_bytes, license_created_date
		) VALUES (
		seq_files.NEXTVAL,
		#{licenseFilesType}, #{licenseFilesName},
		#{licenseFilesPath}, #{licenseFilesSizeBytes}, SYSDATE
		)
	</insert>

	<!-- ==================== [News] ==================== -->

	 <select id="newsSelectAll" parameterType="map"
          resultType="com.wt.app.dto.AdminNewsBoardListDTO"><![CDATA[
    SELECT *
    FROM (
      SELECT ROWNUM AS rnum, subquery.*
      FROM (
        SELECT
          n.news_number,
          n.news_title,
          n.news_link_url,
          a.admin_name,
          TO_CHAR(n.news_created_date,'YYYY-MM-DD HH24:MI:SS') AS news_created_date,
          TO_CHAR(n.news_updated_date,'YYYY-MM-DD HH24:MI:SS') AS news_updated_date
        FROM tbl_news n
        JOIN tbl_admin a ON a.admin_number = n.admin_number
        ORDER BY n.news_created_date DESC, n.news_number DESC
      ) subquery
    )
    WHERE rnum BETWEEN #{startRow} AND #{endRow}
  ]]></select>

  <!-- 총 개수 -->
  <select id="newsGetTotal" resultType="int">
    SELECT COUNT(*) FROM tbl_news
  </select>

  <!-- 등록 -->
  <insert id="newsInsert" parameterType="com.wt.app.dto.AdminNewsBoardDTO">
    <selectKey keyProperty="newsNumber" resultType="int" order="BEFORE"><![CDATA[
      SELECT seq_news_items.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_news
      (news_number, admin_number, news_title, news_link_url, news_created_date, news_updated_date)
    VALUES
      (#{newsNumber}, #{adminNumber}, #{newsTitle}, #{newsLinkUrl}, SYSDATE, NULL)
    ]]>
  </insert>

  <!-- 수정 -->
  <update id="newsUpdate" parameterType="com.wt.app.dto.AdminNewsBoardDTO"><![CDATA[
    UPDATE tbl_news
       SET news_title = #{newsTitle},
           news_link_url = #{newsLinkUrl},
           news_updated_date = SYSDATE
     WHERE news_number = #{newsNumber}
  ]]></update>

  <!-- 단건 조회(날짜 문자열로 변환) -->
  <select id="newsSelectOne" parameterType="int"
          resultType="com.wt.app.dto.AdminNewsBoardDTO"><![CDATA[
    SELECT
      n.news_number, n.admin_number,
      n.news_title, n.news_link_url,
      TO_CHAR(n.news_created_date,'YYYY-MM-DD HH24:MI:SS') AS news_created_date,
      TO_CHAR(n.news_updated_date,'YYYY-MM-DD HH24:MI:SS') AS news_updated_date
    FROM tbl_news n
    WHERE n.news_number = #{value}
  ]]></select>

  <!-- 삭제 -->
  <delete id="newsDelete" parameterType="int"><![CDATA[
    DELETE FROM tbl_news WHERE news_number = #{value}
  ]]></delete>
	<!-- ==================== [News 연동 파일: tbl_files_notice] ==================== -->
	<!-- 파일 추가: seq_files 사용 -->
	<insert id="fileNoticeInsert1"
		parameterType="com.wt.app.dto.FileNoticeDTO">
		<selectKey keyProperty="noticeFilesNumber" resultType="int"
			order="BEFORE"> 
      <![CDATA[ SELECT seq_files.NEXTVAL FROM DUAL ]]>
		</selectKey> <![CDATA[ INSERT 
      INTO tbl_files_notice (notice_files_number, notice_files_type, notice_files_name, 
      notice_files_path, notice_files_size_bytes, notice_created_date) VALUES (#{noticeFilesNumber}, 
      #{noticeFilesType}, #{noticeFilesName}, #{noticeFilesPath}, #{noticeFilesSizeBytes}, 
      SYSDATE) ]]>
	</insert>

	<!-- 파일 조회 (뉴스번호 기준) -->
	<select id="fileNoticeSelect" parameterType="int"
		resultType="com.wt.app.dto.FileNoticeDTO">
      <![CDATA[
      SELECT f.notice_files_number, f.notice_files_type, f.notice_files_name, f.notice_files_path, f.notice_files_size_bytes, TO_CHAR(f.notice_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate FROM tbl_news n JOIN tbl_files_notice f ON f.notice_files_number = n.files_number WHERE n.news_number = #{value}
      ]]>
	</select>

	<!-- 파일 삭제 (뉴스번호 기준) -->
	<delete id="fileNoticeDelete" parameterType="int">
      <![CDATA[
       DELETE FROM tbl_files_notice WHERE notice_files_number = ( SELECT files_number FROM tbl_news WHERE news_number = #{value} )
        ]]>
	</delete>

	<!-- ==================== [Care: 이력수정 - 자격증/통장사본] ==================== -->
	<!-- 자격증 이력 INSERT -->
	<insert id="licenseModifyInsert"
		parameterType="com.wt.app.dto.LicenseModifyDTO">
		<selectKey keyProperty="licenseModifyNumber"
			resultType="int" order="BEFORE">
			SELECT seq_license_modify.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO tbl_license_modify (
		license_modify_number, users_number,
		license_files_number, license_files_type, license_files_name,
		license_files_path, license_files_size_bytes, license_created_date
		)
		VALUES (
		#{licenseModifyNumber}, #{usersNumber},
		#{licenseFilesNumber},
		#{licenseFilesType}, #{licenseFilesName},
		#{licenseFilesPath},
		#{licenseFilesSizeBytes}, SYSDATE
		)
	</insert>

	<!-- 통장사본 이력 INSERT -->
	<insert id="accountModifyInsert"
		parameterType="com.wt.app.dto.AccountModifyDTO">
		<selectKey keyProperty="accountModifyNumber"
			resultType="int" order="BEFORE">
			SELECT seq_account_modify.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO tbl_account_modify (
		account_modify_number, users_number,
		account_files_number, account_files_type, account_files_name,
		account_files_path, account_files_size_bytes, account_created_date
		)
		VALUES (
		#{accountModifyNumber}, #{usersNumber},
		#{accountFilesNumber},
		#{accountFilesType}, #{accountFilesName},
		#{accountFilesPath},
		#{accountFilesSizeBytes}, SYSDATE
		)
	</insert>

	<!-- 자격증 이력: 특정 회원 최신 1건 -->
	<select id="licenseModifyLatestByUser" parameterType="int"
		resultType="com.wt.app.dto.LicenseModifyDTO"><![CDATA[
    SELECT *
    FROM (
      SELECT *
      FROM tbl_license_modify
      WHERE users_number = #{value}
      ORDER BY license_created_date DESC, license_modify_number DESC
    )
    WHERE ROWNUM = 1
  ]]></select>

	<!-- 통장사본 이력: 특정 회원 최신 1건 -->
	<select id="accountModifyLatestByUser" parameterType="int"
		resultType="com.wt.app.dto.AccountModifyDTO"><![CDATA[
    SELECT *
    FROM (
      SELECT *
      FROM tbl_account_modify
      WHERE users_number = #{value}
      ORDER BY account_created_date DESC, account_modify_number DESC
    )
    WHERE ROWNUM = 1
  ]]></select>

	<!-- 자격증 적용: care_users에 최신 PENDING 1건 반영 -->
	<update id="careerApplyLicense_UpdateCareUsers"
		parameterType="int"><![CDATA[
    UPDATE tbl_care_users cu
       SET cu.care_certificate_files_num = (
             SELECT x.license_files_number
               FROM (
                      SELECT lm.license_files_number
                        FROM tbl_license_modify lm
                       WHERE lm.users_number = #{value}
                         AND lm.status = 'PENDING'
                       ORDER BY lm.license_modify_number DESC
                    ) x
              WHERE ROWNUM = 1
           )
     WHERE cu.users_number = #{value}
       AND EXISTS (
             SELECT 1 FROM tbl_license_modify lm
              WHERE lm.users_number = #{value}
                AND lm.status = 'PENDING'
           )
  ]]></update>

	<!-- 자격증: 최신 PENDING 1건 APPLIED -->
	<update id="careerApplyLicense_MarkApplied" parameterType="int"><![CDATA[
    UPDATE tbl_license_modify lm
       SET lm.status = 'APPLIED',
           lm.applied_date = SYSDATE
     WHERE lm.users_number = #{value}
       AND lm.license_modify_number = (
             SELECT license_modify_number FROM (
               SELECT license_modify_number
                 FROM tbl_license_modify
                WHERE users_number = #{value}
                  AND status = 'PENDING'
                ORDER BY license_modify_number DESC
             ) WHERE ROWNUM = 1
           )
  ]]></update>

	<!-- 자격증: 남은 PENDING 정리(CLEARED) -->
	<update id="careerClearLicense" parameterType="int"><![CDATA[
    UPDATE tbl_license_modify
       SET status = 'CLEARED',
           applied_date = NVL(applied_date, SYSDATE)
     WHERE users_number = #{value}
       AND status = 'PENDING'
  ]]></update>

	<!-- 통장사본 적용: care_users에 최신 PENDING 1건 반영 -->
	<update id="careerApplyAccount_UpdateCareUsers"
		parameterType="int"><![CDATA[
    UPDATE tbl_care_users cu
       SET cu.care_passbook_files_num = (
             SELECT x.account_files_number
               FROM (
                      SELECT am.account_files_number
                        FROM tbl_account_modify am
                       WHERE am.users_number = #{value}
                         AND am.status = 'PENDING'
                       ORDER BY am.account_modify_number DESC
                    ) x
              WHERE ROWNUM = 1
           )
     WHERE cu.users_number = #{value}
       AND EXISTS (
             SELECT 1 FROM tbl_account_modify am
              WHERE am.users_number = #{value}
                AND am.status = 'PENDING'
           )
  ]]></update>

	<!-- 통장사본: 최신 PENDING 1건 APPLIED -->
	<update id="careerApplyAccount_MarkApplied" parameterType="int"><![CDATA[
    UPDATE tbl_account_modify am
       SET am.status = 'APPLIED',
           am.applied_date = SYSDATE
     WHERE am.users_number = #{value}
       AND am.account_modify_number = (
             SELECT account_modify_number FROM (
               SELECT account_modify_number
                 FROM tbl_account_modify
                WHERE users_number = #{value}
                  AND status = 'PENDING'
                ORDER BY account_modify_number DESC
             ) WHERE ROWNUM = 1
           )
  ]]></update>

	<!-- 통장사본: 남은 PENDING 정리(CLEARED) -->
	<update id="careerClearAccount" parameterType="int"><![CDATA[
    UPDATE tbl_account_modify
       SET status = 'CLEARED',
           applied_date = NVL(applied_date, SYSDATE)
     WHERE users_number = #{value}
       AND status = 'PENDING'
  ]]></update>
  
  
  <!-- 김태현 코드 시작 -->
  	<!-- 전체 유저 수 -->
	<select id="getUserTotal" resultType="int">
		SELECT COUNT(users_number)
		FROM tbl_users
	</select>
	
	<!-- 전체 공지 수 -->
	<select id="getNoticeTotal" resultType="int">
		SELECT COUNT(notice_number)
		FROM tbl_notices
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="adminUserManager" parameterType="map" resultType="AdminUserManagerDTO">
	<![CDATA[
	SELECT rnum,
           users_number,
           users_name,
           users_id,
           users_email,
           users_phone,
           users_type
	FROM (
	    SELECT ROWNUM AS rnum, subquery.*
	    FROM (
	        SELECT 
	            u.users_number,
	            u.users_name,
	            u.users_id,
	            u.users_email,
	            u.users_phone,
	            u.users_type
	        FROM tbl_users u
	        LEFT JOIN tbl_normal_users n 
	            ON u.users_number = n.users_number
	        LEFT JOIN tbl_care_users c 
	            ON u.users_number = c.users_number
	        ORDER BY u.users_number DESC
	    ) subquery
	) 
	WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 회원 디테일 조회 -->
	<select id="adminUserManagerDetail" parameterType="int" resultType="AdminUserManagerDTO">
		SELECT 
            u.users_name,
            u.users_type,
            u.users_created_date,
            u.users_address_line1,
            u.users_address_line2,
            u.users_phone,
            u.users_email,
            u.users_id,
            u.users_password,
            u.users_point
        FROM tbl_users u
        LEFT JOIN tbl_normal_users n 
            ON u.users_number = n.users_number
        LEFT JOIN tbl_care_users c 
            ON u.users_number = c.users_number
        WHERE u.users_number = #{usersNumber}
        ORDER BY u.users_number DESC
	</select>
	
	<!-- 공지사항 조회 -->
	<select id="adminNoticeListSearch" resultType="AdminUserManagerDTO">
	<![CDATA[
	SELECT *
	FROM (
	    SELECT ROWNUM AS rnum, subquery.*
	    FROM (
			SELECT NOTICE_NUMBER , NOTICE_TITLE , ADMIN_NUMBER , NOTICE_VIEW_COUNT , NOTICE_CREATED_DATE 
			FROM TBL_NOTICES
		) subquery
	) 
	WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 공지사항 상세 -->
	<select id="adminNoticeDetail" resultType="AdminUserManagerDTO">
		SELECT NOTICE_NUMBER , NOTICE_TITLE , ADMIN_NUMBER , NOTICE_VIEW_COUNT , NOTICE_CREATED_DATE, NOTICE_CONTENT 
		FROM TBL_NOTICES
	</select>
	
	<!-- 공지사항 등록 -->
	<insert id="adminNoticeListInsert" parameterType="AdminUserManagerDTO">
		<selectKey keyProperty="noticeNumber" resultType="int" order="BEFORE">
			SELECT seq_notices.nextVal FROM DUAL
		</selectKey>
		insert into tbl_notices(notice_number, notice_title, notice_content)
		values(#{noticeNumber} #{noticeTitle}, #{noticeContent})
	</insert>
	
	<!-- 공지사항 수정 -->
	<update id="adminNoticeListUpdate" parameterType="AdminUserManagerDTO">
		update tbl_notices
		set notice_title = #{noticeTitle}, notice_content = #{noticeContent}
		where notice_number = #{noticeNumber}
	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="adminNoticeListDelete" parameterType="int">
		delete from tbl_notices
		where notice_number = #{noticeNumber}
	</delete>
	
	<!-- 신고글 전체 조회 -->
	<select id="adminReportListSelect" resultType="AdminReportListDTO">
		SELECT 
		    posts_number,
		    posts_title ,
		    posts_created_date,
		    posts_report_count
		FROM tbl_posts
		WHERE posts_report_count <![CDATA[>]]> 4
	</select>
	
	<!-- 찜 목록 전체 개수 -->
	<select id="reportTotal" resultType="int">
		SELECT COUNT(*) FROM TBL_POSTS WHERE posts_report_count <![CDATA[>]]> 4
	</select>
	
	<!-- 신고글 상세 -->
   <select id="reportDetail" parameterType="int" resultType="AdminReportListDTO">
	<![CDATA[      
		SELECT P.POSTS_NUMBER, P.POSTS_TITLE, P.POSTS_CONTENT, P.USERS_NUMBER, U.USERS_NAME, P.POSTS_VIEW_COUNT, TO_CHAR(P.POSTS_CREATED_DATE, 'YYYY-MM-DD') AS POSTS_CREATED_DATE, TO_CHAR(P.POSTS_UPDATED_DATE, 'YYYY-MM-DD') AS POSTS_UPDATED_DATE, P.POSTS_REPORT_COUNT 
		FROM RICEBALL.TBL_POSTS P JOIN RICEBALL.TBL_USERS U ON P.USERS_NUMBER = U.USERS_NUMBER
		WHERE POSTS_NUMBER = #{posts_number}
     ]]>
   </select>
	
	<!-- 신고글 삭제 -->
	<delete id="adminReportListDelete" parameterType="int">
		delete from tbl_posts
		where posts_number = #{postNumber}
	</delete>
	
	<!-- 베너 뉴스 등록 -->
	<insert id="adminNewsBannerInsert" parameterType="AdminUserManagerDTO">
		<selectKey keyProperty="bannerNewsNumber" resultType="int" order="BEFORE">
			SELECT seq_news_banners.nextVal FROM DUAL
		</selectKey>
		insert into tbl_news_banners (banner_news_number, banner_title, banner_created_date, banner_link_url)
		values(#{bannerNewsNumber}, #{bannerTitle}, #{bannerCreatedDate}, #{bannerLinkUrl})
	</insert>
	
	<!-- 베너 뉴스 상세 -->
	<select id="adminNewsBannerDetail" resultType="AdminUserManagerDTO">
		select banner_news_number, banner_title, banner_created_date, bannerImageFilesNumber, banner_link_url
		from tbl_news_banners
	</select>
	
	<!-- 베너 뉴스 조회 -->
	<select id="adminNewsBannerSelect" resultType="AdminUserManagerDTO">
		select banner_news_number, banner_title, banner_created_date
		from tbl_news_banners
	</select>
	
	<!-- 베너 뉴스 수정 -->
	<update id="adminNewsBannerUpdate" parameterType="AdminNewsBannerDTO">
		update tbl_news_banners
		set news_title = #{newsTitle}, news_content = #{newsContent}, news_link_url = #{newsLinkUrl}
		where news_number = #{newsNumber}
	</update>
	
	<!-- 베너 뉴스 삭제 -->
	<delete id="adminNewsBannerDelete" parameterType="int">
		delete from tbl_news
		where news_number = #{newsNumber}
	</delete>
	
	<!-- 문의 조회 -->
	<select id="adminReferenceListSelect" resultType="AdminUserManagerDTO">
		SELECT 
		    r.reference_number,
		    r.reference_title,
		    r.reference_users_number,
		    u.users_id,
		    r.reference_created_date,
		    r.reference_answered_yn
		FROM tbl_reference r
		JOIN tbl_users u 
		     ON r.reference_users_number = u.users_number
		ORDER BY r.reference_number;
	</select>
	
	<!-- 문의 상세 -->
	<select id="adminReferenceDetail" resultType="AdminUserManagerDTO">
		SELECT 
		    r.reference_number,
		    r.reference_title,
		    r.reference_users_number,
		    u.users_id,
		    r.reference_created_date,
		    r.reference_answered_yn
		FROM tbl_reference r
		JOIN tbl_users u 
		     ON r.reference_users_number = u.users_number
	</select>
</mapper>