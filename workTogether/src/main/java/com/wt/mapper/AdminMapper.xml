<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

	<!-- ========================= [Auth] ========================= -->
	<!-- 로그인: admin_number 반환 -->
	<select id="login" parameterType="com.wt.app.dto.AdminLoginDTO"
		resultType="int"><![CDATA[
    SELECT admin_number
      FROM tbl_admin
     WHERE admin_id = #{adminId}
       AND admin_password = #{adminPassword}
  ]]></select>

	<select id="getAdminName" parameterType="int"
		resultType="string"><![CDATA[
    SELECT admin_name
      FROM tbl_admin
     WHERE admin_number = #{value}
  ]]></select>

	<!-- ==================== [Care: 가입신청/조회] ==================== -->
	<!-- 대기 목록 (페이지네이션: offset, limit) -->
	<select id="carePendingListPaged" parameterType="map"
		resultType="com.wt.app.dto.AdminCareSignupDTO"><![CDATA[
    SELECT *
      FROM (
            SELECT ROWNUM AS rnum, inner_t.*
              FROM (
                    SELECT
                      u.users_number AS usersNumber,
                      u.users_id,
                      u.users_created_date,
                      u.users_name,
                      u.users_email,
                      u.users_phone,
                      u.users_postsal_code,
                      u.users_address_line1,
                      u.users_address_line2,
                      c.care_intro_text,
                      c.care_certificate_files_num,
                      c.care_passbook_files_num,
                      c.care_profiles_photo_number,
                      c.care_accept
                      FROM tbl_care_users c
                      JOIN tbl_users u ON u.users_number = c.users_number
                     WHERE c.care_accept = 'W'
                  ORDER BY u.users_created_date DESC, u.users_number DESC
                   ) inner_t
           )
     WHERE rnum BETWEEN #{startRow} AND #{endRow}
  ]]></select>

	<!-- 대기 총 개수 -->
	<select id="carePendingCount" resultType="int"><![CDATA[
    SELECT COUNT(*)
      FROM tbl_care_users c
      JOIN tbl_users u ON u.users_number = c.users_number
     WHERE c.care_accept = 'W'
  ]]></select>

	<!-- 단건 조회 (users_number) -->
	<select id="careSignupOne" parameterType="int"
		resultType="com.wt.app.dto.AdminCareSignupDTO"><![CDATA[
    SELECT
      u.users_number AS usersNumber, u.users_id, u.users_created_date,
      u.users_name, u.users_email, u.users_phone,
      u.users_postsal_code, u.users_address_line1, u.users_address_line2,
      c.care_intro_text, c.care_certificate_files_num,
      c.care_passbook_files_num, c.care_profiles_photo_number, c.care_accept
      FROM tbl_care_users c
      JOIN tbl_users u ON u.users_number = c.users_number
     WHERE c.users_number = #{value}
  ]]></select>

	<update id="updateCareAccept" parameterType="map"><![CDATA[
    UPDATE tbl_care_users
       SET care_accept = #{status}
     WHERE users_number = #{usersNumber}
  ]]></update>

	<!-- 승인/반려 -->
	<update id="careApprove" parameterType="int"><![CDATA[
    UPDATE tbl_care_users
       SET care_accept = 'Y'
     WHERE users_number = #{value}
  ]]></update>

	<!-- 주의: 이름은 delete지만 실제로는 상태필드 업데이트 -->
	<update id="careReject" parameterType="int"><![CDATA[
    UPDATE tbl_care_users
       SET care_accept = 'N'
     WHERE users_number = #{value}
  ]]></update>

	<delete id="careRejectAll" parameterType="int"><![CDATA[
    DELETE FROM tbl_users
     WHERE users_number = #{value}
  ]]></delete>

	<insert id="insertRejectUser" parameterType="map">
		<selectKey keyProperty="rejectNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_reject_users.NEXTVAL FROM dual
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_reject_users (
      reject_number, users_number, admin_number, reject_comment
    ) VALUES (
      #{rejectNumber}, #{usersNumber}, #{adminNumber}, #{rejectComment}
    )
    ]]>
	</insert>

	<!-- ==================== [Care: 파일 조회] ==================== -->
	<select id="careFileLicense" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
  SELECT
    license_files_number       AS fileNumber,
    license_files_type         AS fileType,
    license_files_name         AS fileName,
    license_files_path         AS filePath,
    license_files_size_bytes   AS fileSizeBytes,
    TO_CHAR(license_created_date,'YYYY-MM-DD HH24:MI:SS') AS createdDate
  FROM tbl_files_license
  WHERE license_files_number = #{value}
]]></select>

	<select id="careFileAccount" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
  SELECT
    account_files_number       AS fileNumber,
    account_files_type         AS fileType,
    account_files_name         AS fileName,
    account_files_path         AS filePath,
    account_files_size_bytes   AS fileSizeBytes,
    TO_CHAR(account_created_date,'YYYY-MM-DD HH24:MI:SS') AS createdDate
  FROM tbl_files_account
  WHERE account_files_number = #{value}
]]></select>

	<select id="careFileProfile" parameterType="int"
		resultType="com.wt.app.dto.AdminCareFileDTO"><![CDATA[
    SELECT
      profiles_files_number, profiles_files_type,
      profiles_files_name, profiles_files_size_bytes,
      TO_CHAR(profiles_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
      FROM tbl_files_profiles
     WHERE profiles_files_number = #{value}
  ]]></select>

	<!-- ==================== [파일: 공용 다운로드] ==================== -->
	<select id="fileDownloadLicense" parameterType="int"
		resultType="com.wt.app.dto.AdminFileDownloadDTO"><![CDATA[
    SELECT
      license_files_number, license_files_name, license_files_path,
      license_files_type, license_files_size_bytes,
      TO_CHAR(license_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
      FROM tbl_files_license
     WHERE license_files_number = #{value}
  ]]></select>

	<select id="fileDownloadAccount" parameterType="int"
		resultType="com.wt.app.dto.AdminFileDownloadDTO"><![CDATA[
    SELECT
      account_files_number, account_files_name, account_files_path,
      account_files_type, account_files_size_bytes,
      TO_CHAR(account_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
      FROM tbl_files_account
     WHERE account_files_number = #{value}
  ]]></select>

	<!-- (선택) 자격증 파일 업로드 -->
	<insert id="careInsertLicenseFile"
		parameterType="com.wt.app.dto.FilesLicenseDTO">
		<selectKey keyProperty="licenseFilesNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_files_license.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_files_license (
      license_files_number,
      license_files_type, license_files_name,
      license_files_path, license_files_size_bytes, license_created_date
    ) VALUES (
      #{licenseFilesNumber},
      #{licenseFilesType}, #{licenseFilesName},
      #{licenseFilesPath}, #{licenseFilesSizeBytes}, SYSDATE
    )
    ]]>
	</insert>

	<!-- ==================== [News] ==================== -->
	<select id="newsSelectAll" parameterType="map"
		resultType="com.wt.app.dto.AdminNewsBoardListDTO"><![CDATA[
    SELECT *
      FROM (
            SELECT ROWNUM AS rnum, subquery.*
              FROM (
                    SELECT
                      n.news_number,
                      n.news_title,
                      n.news_link_url,
                      a.admin_name,
                      TO_CHAR(n.news_created_date,'YYYY-MM-DD HH24:MI:SS') AS news_created_date,
                      TO_CHAR(n.news_updated_date,'YYYY-MM-DD HH24:MI:SS') AS news_updated_date
                      FROM tbl_news n
                      JOIN tbl_admin a ON a.admin_number = n.admin_number
                  ORDER BY n.news_number DESC
                   ) subquery
           )
     WHERE rnum BETWEEN #{startRow} AND #{endRow}
  ]]></select>

	<select id="newsGetTotal" resultType="int"><![CDATA[
    SELECT COUNT(*) FROM tbl_news
  ]]></select>

	<insert id="newsInsert"
		parameterType="com.wt.app.dto.AdminNewsBoardDTO">
		<selectKey keyProperty="newsNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_news_items.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_news
      (news_number, admin_number, news_title, news_link_url, news_created_date, news_updated_date)
    VALUES
      (#{newsNumber}, #{adminNumber}, #{newsTitle}, #{newsLinkUrl}, SYSDATE, NULL)
    ]]>
	</insert>

	<update id="newsUpdate"
		parameterType="com.wt.app.dto.AdminNewsBoardDTO"><![CDATA[
    UPDATE tbl_news
       SET news_title    = #{newsTitle},
           news_link_url = #{newsLinkUrl},
           news_updated_date = SYSDATE
     WHERE news_number = #{newsNumber}
  ]]></update>

	<select id="newsSelectOne" parameterType="int"
		resultType="com.wt.app.dto.AdminNewsBoardDTO"><![CDATA[
    SELECT
      n.news_number, n.admin_number,
      n.news_title, n.news_link_url,
      TO_CHAR(n.news_created_date,'YYYY-MM-DD HH24:MI:SS') AS news_created_date,
      TO_CHAR(n.news_updated_date,'YYYY-MM-DD HH24:MI:SS') AS news_updated_date
      FROM tbl_news n
     WHERE n.news_number = #{value}
  ]]></select>

	<delete id="newsDelete" parameterType="int"><![CDATA[
    DELETE FROM tbl_news WHERE news_number = #{value}
  ]]></delete>

	<!-- ==================== [News 연동 파일: tbl_files_notice] ==================== -->
	<insert id="fileNoticeInsert"
		parameterType="com.wt.app.dto.FileNoticeDTO">
		<selectKey keyProperty="noticeFilesNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_files_notice.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_files_notice
      (notice_files_number, notice_files_type, notice_files_name, notice_files_path,
       notice_files_size_bytes, notice_created_date)
    VALUES
      (#{noticeFilesNumber}, #{noticeFilesType}, #{noticeFilesName}, #{noticeFilesPath},
       #{noticeFilesSizeBytes}, SYSDATE)
    ]]>
	</insert>

	<!-- 파일 조회 (뉴스번호 기준) -->
	<select id="fileNoticeSelect" parameterType="int"
		resultType="com.wt.app.dto.FileNoticeDTO"><![CDATA[
    SELECT f.notice_files_number, f.notice_files_type, f.notice_files_name, f.notice_files_path, f.notice_files_size_bytes,
           TO_CHAR(f.notice_created_date,'YYYY-MM-DD HH24:MI:SS') createdDate
      FROM tbl_news n
      JOIN tbl_files_notice f ON f.notice_files_number = n.files_number
     WHERE n.news_number = #{value}
  ]]></select>

	<!-- 파일 삭제 (뉴스번호 기준) -->
	<delete id="fileNoticeDelete" parameterType="int"><![CDATA[
    DELETE FROM tbl_files_notice
     WHERE notice_files_number = ( SELECT files_number FROM tbl_news WHERE news_number = #{value} )
  ]]></delete>

	<!-- 현재 뉴스에 연결된 files_number 조회 -->
	<select id="fileNoticeGetNoticeFilesNumber" parameterType="int"
		resultType="int"><![CDATA[
    SELECT files_number
      FROM tbl_news
     WHERE news_number = #{value}
  ]]></select>

	<!-- tbl_news.files_number 갱신 -->
	<update id="newsUpdateFilesNumber" parameterType="map"><![CDATA[
    UPDATE tbl_news
       SET files_number = #{filesNumber}
     WHERE news_number = #{newsNumber}
  ]]></update>

	<!-- ==================== [Care: 이력수정 - 자격증/통장사본] ==================== -->
	<insert id="licenseModifyInsert"
		parameterType="com.wt.app.dto.LicenseModifyDTO">
		<selectKey keyProperty="licenseModifyNumber"
			resultType="int" order="BEFORE"><![CDATA[
      SELECT seq_license_modify.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_license_modify (
      license_modify_number, users_number,
      license_files_number, license_files_type, license_files_name,
      license_files_path, license_files_size_bytes, license_created_date
    ) VALUES (
      #{licenseModifyNumber}, #{usersNumber},
      #{licenseFilesNumber}, #{licenseFilesType}, #{licenseFilesName},
      #{licenseFilesPath}, #{licenseFilesSizeBytes}, SYSDATE
    )
    ]]>
	</insert>

	<insert id="accountModifyInsert"
		parameterType="com.wt.app.dto.AccountModifyDTO">
		<selectKey keyProperty="accountModifyNumber"
			resultType="int" order="BEFORE"><![CDATA[
      SELECT seq_account_modify.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_account_modify (
      account_modify_number, users_number,
      account_files_number, account_files_type, account_files_name,
      account_files_path, account_files_size_bytes, account_created_date
    ) VALUES (
      #{accountModifyNumber}, #{usersNumber},
      #{accountFilesNumber}, #{accountFilesType}, #{accountFilesName},
      #{accountFilesPath}, #{accountFilesSizeBytes}, SYSDATE
    )
    ]]>
	</insert>

	<select id="licenseModifyLatestByUser" parameterType="int"
		resultType="com.wt.app.dto.LicenseModifyDTO"><![CDATA[
    SELECT *
      FROM (
            SELECT *
              FROM tbl_license_modify
             WHERE users_number = #{value}
          ORDER BY license_created_date DESC, license_modify_number DESC
           )
     WHERE ROWNUM = 1
  ]]></select>

	<select id="accountModifyLatestByUser" parameterType="int"
		resultType="com.wt.app.dto.AccountModifyDTO"><![CDATA[
    SELECT *
      FROM (
            SELECT *
              FROM tbl_account_modify
             WHERE users_number = #{value}
          ORDER BY account_created_date DESC, account_modify_number DESC
           )
     WHERE ROWNUM = 1
  ]]></select>

	<update id="careerApplyLicense_UpdateCareUsers"
		parameterType="int"><![CDATA[
    UPDATE tbl_care_users cu
       SET cu.care_certificate_files_num = (
             SELECT x.license_files_number
               FROM (
                      SELECT lm.license_files_number
                        FROM tbl_license_modify lm
                       WHERE lm.users_number = #{value}
                         AND lm.status = 'PENDING'
                       ORDER BY lm.license_modify_number DESC
                    ) x
              WHERE ROWNUM = 1
           )
     WHERE cu.users_number = #{value}
       AND EXISTS (
             SELECT 1 FROM tbl_license_modify lm
              WHERE lm.users_number = #{value}
                AND lm.status = 'PENDING'
           )
  ]]></update>

	<update id="careerApplyLicense_MarkApplied" parameterType="int"><![CDATA[
    UPDATE tbl_license_modify lm
       SET lm.status = 'APPLIED',
           lm.applied_date = SYSDATE
     WHERE lm.users_number = #{value}
       AND lm.license_modify_number = (
             SELECT license_modify_number FROM (
               SELECT license_modify_number
                 FROM tbl_license_modify
                WHERE users_number = #{value}
                  AND status = 'PENDING'
                ORDER BY license_modify_number DESC
             ) WHERE ROWNUM = 1
           )
  ]]></update>

	<update id="careerClearLicense" parameterType="int"><![CDATA[
    UPDATE tbl_license_modify
       SET status = 'CLEARED',
           applied_date = NVL(applied_date, SYSDATE)
     WHERE users_number = #{value}
       AND status = 'PENDING'
  ]]></update>

	<update id="careerApplyAccount_UpdateCareUsers"
		parameterType="int"><![CDATA[
    UPDATE tbl_care_users cu
       SET cu.care_passbook_files_num = (
             SELECT x.account_files_number
               FROM (
                      SELECT am.account_files_number
                        FROM tbl_account_modify am
                       WHERE am.users_number = #{value}
                         AND am.status = 'PENDING'
                       ORDER BY am.account_modify_number DESC
                    ) x
              WHERE ROWNUM = 1
           )
     WHERE cu.users_number = #{value}
       AND EXISTS (
             SELECT 1 FROM tbl_account_modify am
              WHERE am.users_number = #{value}
                AND am.status = 'PENDING'
           )
  ]]></update>

	<update id="careerApplyAccount_MarkApplied" parameterType="int"><![CDATA[
    UPDATE tbl_account_modify am
       SET am.status = 'APPLIED',
           am.applied_date = SYSDATE
     WHERE am.users_number = #{value}
       AND am.account_modify_number = (
             SELECT account_modify_number FROM (
               SELECT account_modify_number
                 FROM tbl_account_modify
                WHERE users_number = #{value}
                  AND status = 'PENDING'
                ORDER BY account_modify_number DESC
             ) WHERE ROWNUM = 1
           )
  ]]></update>

	<update id="careerClearAccount" parameterType="int"><![CDATA[
    UPDATE tbl_account_modify
       SET status = 'CLEARED',
           applied_date = NVL(applied_date, SYSDATE)
     WHERE users_number = #{value}
       AND status = 'PENDING'
  ]]></update>

	<!-- ==================== [Admin 대시보드/공지/신고] ==================== -->
	<select id="getUserTotal" resultType="int"><![CDATA[
    SELECT COUNT(*) 
	FROM tbl_users u
	LEFT JOIN tbl_normal_users n ON u.users_number = n.users_number
	LEFT JOIN tbl_care_users c ON u.users_number = c.users_number
	WHERE (u.users_type = 'N') OR (u.users_type = 'C' AND c.care_accept = 'Y')

  ]]></select>

	<select id="getNoticeTotal" resultType="int"><![CDATA[
    SELECT COUNT(notice_number) FROM tbl_notices
  ]]></select>

	<select id="adminUserManager" parameterType="map"
		resultType="AdminUserManagerDTO">
  <![CDATA[
  SELECT rnum,
         usersNumber,
         users_name,
         users_id,
         users_email,
         users_phone,
         users_type,
         care_accept
    FROM (
          SELECT ROWNUM AS rnum, subquery.*
            FROM (
                  SELECT 
                    u.users_number AS usersNumber,
                    u.users_name,
                    u.users_id,
                    u.users_email,
                    u.users_phone,
                    u.users_type,
                    c.care_accept
                    FROM tbl_users u
               LEFT JOIN tbl_normal_users n ON u.users_number = n.users_number
               LEFT JOIN tbl_care_users   c ON u.users_number = c.users_number
               WHERE (u.users_type = 'N')
                  OR (u.users_type = 'C' AND c.care_accept = 'Y')
               ORDER BY u.users_number DESC
                 ) subquery
         )
   WHERE rnum BETWEEN #{startRow} AND #{endRow}
  ]]>
	</select>


	<select id="adminUserManagerDetail" parameterType="int"
		resultType="AdminUserManagerDTO"><![CDATA[
    SELECT
      u.users_number      AS usersNumber,
      u.users_name,
      u.users_type,
      u.users_created_date,
      u.users_address_line1,
      u.users_address_line2,
      u.users_phone,
      u.users_email,
      u.users_id,
      u.users_password,
      u.users_point,
      c.users_passbook
     FROM tbl_users u
 LEFT JOIN tbl_normal_users n ON u.users_number = n.users_number
 LEFT JOIN tbl_care_users   c ON u.users_number = c.users_number
     WHERE u.users_number = #{usersNumber}
  ]]></select>

	<update id="adminUserNameUpdate"
		parameterType="AdminUserManagerDTO">
		UPDATE TBL_USERS
		SET USERS_NAME = #{usersName}
		WHERE
		USERS_NUMBER = #{usersNumber}
	</update>

	<update id="adminUserPassbookUpdate"
		parameterType="AdminUserManagerDTO">
		update Tbl_care_users
		set users_passbook =
		#{usersPassbook}
		where users_number = #{usersNumber}
	</update>

	<delete id="adminUserDelete" parameterType="int">
		delete from tbl_users
		where users_number = #{usersNumber}
	</delete>

	<select id="adminNoticeListSearch" parameterType="map"
		resultType="AdminNoticeListDTO">
   <![CDATA[
      SELECT *
      FROM (
            SELECT ROWNUM AS rnum, subquery.*
              FROM (
                    SELECT N.NOTICE_NUMBER , N.NOTICE_TITLE , N.ADMIN_NUMBER, A.ADMIN_NAME, N.NOTICE_VIEW_COUNT , N.NOTICE_CREATED_DATE 
                      FROM TBL_NOTICES N
                      JOIN TBL_ADMIN A ON N.ADMIN_NUMBER = A.ADMIN_NUMBER
                   ) subquery
           )
     WHERE rnum BETWEEN #{startRow} AND #{endRow}
  ]]></select>

	<select id="adminNoticeDetail" parameterType="int"
		resultType="AdminNoticeListDTO"><![CDATA[
    SELECT N.NOTICE_NUMBER,
           N.NOTICE_TITLE,
           N.ADMIN_NUMBER,
           A.ADMIN_NAME,
           N.NOTICE_VIEW_COUNT,
           N.NOTICE_CREATED_DATE,
           N.NOTICE_CONTENT
      FROM TBL_NOTICES N
      JOIN TBL_ADMIN A ON N.ADMIN_NUMBER = A.ADMIN_NUMBER
     WHERE N.NOTICE_NUMBER = #{noticeNumber}
  ]]></select>

	<insert id="adminNoticeListInsert"
		parameterType="AdminNoticeListDTO">
		<selectKey keyProperty="noticeNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_notices.nextVal FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_notices( notice_number, notice_title, admin_number, notice_content, notice_view_count, notice_created_date)
    VALUES (#{noticeNumber}, #{noticeTitle}, #{adminNumber}, #{noticeContent}, #{noticeViewCount}, sysdate)
    ]]>
	</insert>

	<!-- 공지사항 수정 -->
	<update id="adminNoticeListUpdate"
		parameterType="AdminUserManagerDTO">
		update tbl_notices
		set notice_title = #{noticeTitle},
		notice_content = #{noticeContent}
		where notice_number = #{noticeNumber}
	</update>

	<!-- 공지사항 삭제 -->
	<delete id="adminNoticeListDelete" parameterType="int">
		delete from
		tbl_notices
		where notice_number = #{noticeNumber}
	</delete>

	<!-- 신고글 전체 조회 -->
	<select id="adminReportListSelect"
		resultType="AdminReportListDTO">
		SELECT
		posts_number,
		posts_title ,
		posts_created_date,
		posts_report_count
		FROM tbl_posts
		WHERE posts_report_count <![CDATA[>]]>
		4
	</select>

	<!-- 찜 목록 전체 개수 -->
	<select id="reportTotal" resultType="int">
		SELECT COUNT(*) FROM TBL_POSTS WHERE posts_report_count <![CDATA[>]]>
		4
	</select>

	<!-- 신고글 삭제 -->
	<delete id="adminReportListDelete" parameterType="int">
		delete from
		tbl_posts
		where posts_number = #{postNumber}
	</delete>

	<!-- ==================== [News Banners] ==================== -->
	<select id="bannerCountAll" resultType="int"><![CDATA[
    SELECT COUNT(*) FROM tbl_news_banners
  ]]></select>

	<select id="bannerFindOldestId" resultType="int"><![CDATA[
    SELECT banner_news_number
      FROM tbl_news_banners
  ORDER BY NVL(banner_updated_date, banner_created_date) ASC,
           banner_news_number ASC
  FETCH FIRST 1 ROWS ONLY
  ]]></select>

	<insert id="adminNewsBannerInsert"
		parameterType="com.wt.app.dto.AdminNewsBannerDTO">
		<selectKey keyProperty="bannerNewsNumber" resultType="int"
			order="BEFORE"><![CDATA[
      SELECT seq_news_banners.NEXTVAL FROM DUAL
    ]]></selectKey>
    <![CDATA[
    INSERT INTO tbl_news_banners
      (banner_news_number, admin_number, banner_title, banner_link_url, banner_created_date, banner_updated_date)
    VALUES
      (#{bannerNewsNumber}, #{adminNumber}, #{bannerTitle}, #{bannerLinkUrl}, SYSDATE, NULL)
    ]]>
	</insert>

	<!-- 교체(제목/링크만) — DAO: admin.bannerReplace 호출 -->
	<update id="bannerReplace"
		parameterType="com.wt.app.dto.AdminNewsBannerDTO"><![CDATA[
    UPDATE tbl_news_banners
       SET banner_title = #{bannerTitle},
           banner_link_url = #{bannerLinkUrl},
           banner_updated_date = SYSDATE
     WHERE banner_news_number = #{bannerNewsNumber}
  ]]></update>

	<select id="adminNewsBannerSelectOne" parameterType="int"
		resultType="com.wt.app.dto.AdminNewsBannerDTO"><![CDATA[
    SELECT
      b.banner_news_number         AS bannerNewsNumber,
      b.admin_number               AS adminNumber,
      b.banner_image_files_number  AS bannerImageFilesNumber,
      b.banner_title               AS bannerTitle,
      b.banner_link_url            AS bannerLinkUrl,
      TO_CHAR(b.banner_created_date,'YYYY-MM-DD HH24:MI:SS') AS bannerCreatedDate,
      TO_CHAR(b.banner_updated_date,'YYYY-MM-DD HH24:MI:SS') AS bannerUpdatedDate,
      f.banner_files_path          AS bannerFilesPath,
      f.banner_files_size_bytes    AS bannerFilesSize
      FROM tbl_news_banners b
 LEFT JOIN tbl_files_banner f
        ON f.banner_files_number = b.banner_news_number
     WHERE b.banner_news_number = #{value}
  ]]></select>

	<select id="adminNewsBannerSelect"
		resultType="com.wt.app.dto.AdminNewsBannerDTO"><![CDATA[
    SELECT
      b.banner_news_number         AS bannerNewsNumber,
      b.admin_number               AS adminNumber,
      b.banner_image_files_number  AS bannerImageFilesNumber,
      b.banner_title               AS bannerTitle,
      b.banner_link_url            AS bannerLinkUrl,
      TO_CHAR(b.banner_created_date,'YYYY-MM-DD HH24:MI:SS') AS bannerCreatedDate,
      TO_CHAR(b.banner_updated_date,'YYYY-MM-DD HH24:MI:SS') AS bannerUpdatedDate,
      f.banner_files_path          AS filePath
      FROM tbl_news_banners b
 LEFT JOIN tbl_files_banner f
        ON f.banner_files_number = b.banner_news_number
  ORDER BY b.banner_news_number ASC
  FETCH FIRST 6 ROWS ONLY
  ]]></select>

	<update id="adminNewsBannerUpdate"
		parameterType="com.wt.app.dto.AdminNewsBannerDTO"><![CDATA[
    UPDATE tbl_news_banners
       SET banner_title = #{bannerTitle},
           banner_link_url = #{bannerLinkUrl},
           banner_updated_date = SYSDATE
     WHERE banner_news_number = #{bannerNewsNumber}
  ]]></update>

	<delete id="adminNewsBannerDelete" parameterType="int"><![CDATA[
    DELETE FROM tbl_news_banners WHERE banner_news_number = #{value}
  ]]></delete>

	<update id="bannerUpsertFile" parameterType="map"><![CDATA[
    MERGE INTO tbl_files_banner f
    USING (SELECT #{bannerNewsNumber} AS id FROM dual) s
       ON (f.banner_files_number = s.id)
     WHEN MATCHED THEN UPDATE SET
          f.banner_files_path        = #{path},
          f.banner_files_name        = #{fileName},
          f.banner_files_type         = #{fileType},
          f.banner_files_size_bytes  = #{sizeBytes}
     WHEN NOT MATCHED THEN
          INSERT (banner_files_number, banner_files_path, banner_files_name,
                  banner_files_type, banner_files_size_bytes, banner_created_date)
          VALUES (#{bannerNewsNumber}, #{path}, #{fileName}, #{fileType},
                  #{sizeBytes}, SYSDATE)
  ]]></update>

	<!-- 문의 조회/상세 -->
	<select id="adminReferenceListSelect"
		resultType="AdminReferenceListDTO"><![CDATA[
    SELECT
      r.reference_number,
      r.reference_title,
      r.reference_users_number,
      u.users_name,
      u.users_id,
      r.reference_created_date,
      r.reference_answered_yn
      FROM tbl_reference r
      JOIN tbl_users u ON r.reference_users_number = u.users_number
  ORDER BY r.reference_number
  ]]></select>

	<select id="adminReferenceDetail" parameterType="int" resultType="AdminReferenceListDTO">
    SELECT
        r.reference_number       ,
        r.reference_title        ,
        r.reference_users_number ,
        u.users_name			 ,
        u.users_id               ,
        r.reference_created_date ,
        r.reference_content      ,
        r.reference_answered_yn  
    FROM tbl_reference r
    JOIN tbl_users u ON r.reference_users_number = u.users_number
    WHERE r.reference_number = #{referenceNumber}
	</select>

	<insert id="insertReply" parameterType="AdminReferenceReplyDTO">
    INSERT INTO tbl_reference_reply (
        reply_reference_reply_number,
        reference_number,
        admin_number,
        reply_content,
        reply_created_date,
    ) VALUES (
        seq_reference_reply.NEXTVAL,
        #{referenceNumber},
        #{adminNumber},
        #{replyContent},
        SYSDATE
    )
	</insert>
	<update id="updateReferenceAnswered" parameterType="int">
    UPDATE tbl_reference
    SET reference_answered_yn = 'Y'
    WHERE reference_number = #{referenceNumber}
	</update>

	<!-- ==================== [Point Refunds / 포인트 환급] ==================== -->
	<!-- (돌봄/사용자측) 환급요청 등록 -->
	<insert id="pointReturnInsert"
		parameterType="com.wt.app.dto.CarePointreturnDTO">
		<selectKey keyProperty="pointReturnId" resultType="long"
			order="BEFORE">
      <![CDATA[
      SELECT seq_point_refunds.NEXTVAL FROM dual
      ]]>
		</selectKey>
      <![CDATA[
      INSERT INTO TBL_POINT_RETURN (
          point_return_id, users_number, points_amount,
          requested_at, status, bank_name, account_number
        ) VALUES (
          #{pointReturnId}, #{usersNumber}, #{pointsAmount},
          SYSDATE, NVL(#{status}, 'P'), #{bankName}, #{accountNumber}
        )
        ]]>
	</insert>

	<!-- (관리자) 환급요청 목록 (페이지네이션) -->
	<select id="pointReturnListPaged" parameterType="map"
		resultType="com.wt.app.dto.CarePointreturnDTO">
          <![CDATA[
           SELECT *
           FROM (
                SELECT ROWNUM rnum, t.*
                FROM (
                  SELECT
                    pr.point_return_id AS pointReturnId,
                    pr.users_number AS usersNumber,
                    u.users_id AS usersId,
                    u.users_name AS usersName,
                    pr.points_amount AS pointsAmount,
                    TO_CHAR(pr.requested_at,'YYYY-MM-DD HH24:MI:SS') AS requestedAt,
                    TO_CHAR(pr.refunded_at,'YYYY-MM-DD HH24:MI:SS') AS refundedAt,
                    pr.status AS status
                  FROM TBL_POINT_RETURN pr
                  JOIN TBL_USERS u ON u.users_number = pr.users_number
           ]]>
		<where>
			<if test="status != null and status != ''">
				pr.status = #{status}
			</if>
		</where>
           <![CDATA[
            ORDER BY pr.point_return_id DESC
                ) t
           )
           WHERE rnum BETWEEN #{startRow} AND #{endRow}
           ]]>
	</select>

	<!-- (관리자) 총 개수 -->
	<select id="pointReturnCount" parameterType="map"
		resultType="int">
      <![CDATA[
        SELECT COUNT(*)
        FROM TBL_POINT_RETURN pr
        ]]>
		<where>
			<if test="status != null and status != ''">
				pr.status = #{status}
			</if>
		</where>
	</select>

	<!-- (관리자) 단건 조회 -->
	<select id="pointReturnOne" parameterType="long"
		resultType="com.wt.app.dto.CarePointreturnDTO"><![CDATA[
  SELECT
    pr.point_return_id  AS pointReturnId,
    pr.users_number     AS usersNumber,
    u.users_id          AS usersId,
    u.users_name        AS usersName,
    pr.points_amount    AS pointsAmount,
    u.users_point       AS remainPoint,
    pr.bank_name        AS bankName,
    pr.account_number   AS accountNumber,
    TO_CHAR(pr.requested_at, 'YYYY-MM-DD HH24:MI:SS') AS requestedAt,
    TO_CHAR(pr.refunded_at, 'YYYY-MM-DD HH24:MI:SS')  AS refundedAt,
    pr.status           AS status
  FROM TBL_POINT_RETURN pr
  JOIN TBL_USERS u
    ON u.users_number = pr.users_number
  WHERE pr.point_return_id = #{value}
]]></select>

	<!-- (관리자) 승인 처리: 출금형(포인트 차감) -->
	<update id="pointReturnApprove_DeductUserPoint"
		parameterType="map"><![CDATA[
    UPDATE TBL_USERS u
     SET u.users_point = u.users_point - (
           SELECT points_amount FROM TBL_POINT_RETURN WHERE point_return_id = #{pointReturnId}
         )
   WHERE u.users_number = (
           SELECT users_number FROM TBL_POINT_RETURN WHERE point_return_id = #{pointReturnId}
         )
     AND u.users_point >= (
           SELECT points_amount FROM TBL_POINT_RETURN WHERE point_return_id = #{pointReturnId}
         )
]]></update>


	<!-- (관리자) 승인 상태 반영 -->
	<update id="pointReturnApprove_Mark" parameterType="map"><![CDATA[
  UPDATE TBL_POINT_RETURN
     SET status = 'A',
         refunded_at = SYSDATE
   WHERE point_return_id = #{pointReturnId}
]]></update>
	<!-- (관리자) 반려 -->
	<update id="pointReturnReject" parameterType="map"><![CDATA[
  UPDATE TBL_POINT_RETURN
     SET status = 'R'
   WHERE point_return_id = #{pointReturnId}
]]></update>

	<select id="reportDetail" resultType="AdminReportListDTO">
		select * from tbl_posts p
		join tbl_users u
		ON p.users_number = u.users_number where
		p.posts_number = #{postsNumber}

	</select>

	<!-- 장성주 이력수정 매퍼 -->
	<select id="careCareerListPaged" parameterType="map"
		resultType="com.wt.app.dto.CareCareerRowDTO">
		SELECT *
		FROM (
		SELECT t.*, ROWNUM AS rnum
		FROM (
		SELECT
		am.account_modify_number AS accountModifyNumber,
		am.account_files_number AS accountFilesNumber,
		am.account_files_name AS accountFilesName,
		am.account_files_type AS accountFilesType,
		u.users_number AS usersNumber,
		u.users_name AS usersName,
		u.users_id AS usersId,
		TO_CHAR(am.account_created_date,'YYYY-MM-DD') AS accountCreatedDate,
		am.review_status AS reviewStatus
		FROM TBL_ACCOUNT_MODIFY am
		JOIN TBL_USERS u ON u.users_number = am.users_number
		<where>
			<if
				test="column != null and column != '' and keyword != null and keyword != ''">
				<choose>
					<when test="column == 'number'">
						TO_CHAR(am.account_modify_number) LIKE '%' || #{keyword} || '%'
					</when>
					<when test="column == 'name'">
						u.users_name LIKE '%' || #{keyword} || '%'
					</when>
					<when test="column == 'id'">
						u.users_id LIKE '%' || #{keyword} || '%'
					</when>
					<when test="column == 'date'">
						TO_CHAR(am.account_created_date,'YYYY-MM-DD') = #{keyword}
					</when>
					<when test="column == 'condition'">
						am.review_status = #{keyword}
					</when>
				</choose>
			</if>
		</where>
		ORDER BY am.account_created_date DESC, am.account_modify_number DESC
		) t
		WHERE ROWNUM &lt;= #{endRow}
		)
		WHERE rnum &gt;= #{startRow}
	</select>

	<!-- 총 개수 -->
	<select id="careCareerCount" parameterType="map"
		resultType="int"><![CDATA[
        SELECT COUNT(*)
       FROM TBL_ACCOUNT_MODIFY am
       JOIN TBL_USERS u ON u.users_number = am.users_number
        ]]>
		<where>
			<if
				test="column != null and column != '' and keyword != null and keyword != ''">
				<choose>
					<when test="column == 'number'">
						TO_CHAR(am.account_modify_number) LIKE '%' ||
						#{keyword} || '%'
					</when>
					<when test="column == 'name'">
						u.users_name LIKE '%' || #{keyword} || '%'
					</when>
					<when test="column == 'id'">
						u.users_id LIKE '%' || #{keyword} || '%'
					</when>
					<when test="column == 'date'">
						TO_CHAR(am.account_created_date,'YYYY-MM-DD') =
						#{keyword}
					</when>
					<when test="column == 'condition'">
						am.review_status = #{keyword}
					</when>
				</choose>
			</if>
		</where>
	</select>

	<!-- 상태 변경 (승인/반려/대기) -->
	<update id="careCareerUpdateStatus" parameterType="map"><![CDATA[
   UPDATE TBL_ACCOUNT_MODIFY
   SET REVIEW_STATUS = #{status}
   WHERE ACCOUNT_MODIFY_NUMBER = #{accountModifyNumber}
]]></update>

	<!-- 최신 신청 1건 승인(Y) -->
	<update id="careCareerApproveLatestByUser" parameterType="int"><![CDATA[
   UPDATE TBL_ACCOUNT_MODIFY am
   SET am.REVIEW_STATUS = 'Y'
   WHERE am.users_number = #{value}
   AND am.account_modify_number = (
      SELECT account_modify_number FROM (
             SELECT account_modify_number
             FROM TBL_ACCOUNT_MODIFY
             WHERE users_number = #{value}
             ORDER BY account_created_date DESC, account_modify_number DESC
           ) WHERE ROWNUM = 1
         )
   ]]></update>

	<!-- 최신 신청 1건 반려(N) -->
	<update id="careCareerRejectLatestByUser" parameterType="int"><![CDATA[
   UPDATE TBL_ACCOUNT_MODIFY am
    SET am.REVIEW_STATUS = 'N'
      WHERE am.users_number = #{value}
    AND am.account_modify_number = (
          SELECT account_modify_number FROM (
             SELECT account_modify_number
               FROM TBL_ACCOUNT_MODIFY
              WHERE users_number = #{value}
              ORDER BY account_created_date DESC, account_modify_number DESC
           ) WHERE ROWNUM = 1
         )
   ]]></update>

	<!-- 신고자 정보 -->
	<select id="selectReportDetail" parameterType="int"
		resultType="ReportDTO">
		SELECT u.users_number, u.users_name, r.report_reason
		FROM tbl_report r
		JOIN tbl_users u
		ON r.report_users_number = u.users_number
		WHERE r.report_post_number = #{postsNumber};
	</select>

	<!-- 신고자 전체 개수 -->
	<select id="allReport" resultType="int">
		SELECT COUNT(*) FROM TBL_REPORT WHERE report_post_number = #{postNumber};
	</select>
</mapper>
