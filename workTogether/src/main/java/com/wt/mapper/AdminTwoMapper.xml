<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<!-- 전체 유저 수 -->
	<select id="getUserTotal" resultType="int">
		SELECT COUNT(users_number)
		FROM tbl_users
	</select>
	
	<!-- 전체 공지 수 -->
	<select id="getNoticeTotal" resultType="int">
		SELECT COUNT(notice_number)
		FROM tbl_notices
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="adminUserManager" parameterType="map" resultType="AdminUserManagerDTO">
	<![CDATA[
	SELECT rnum,
           users_number,
           users_name,
           users_id,
           users_email,
           users_phone,
           users_type
	FROM (
	    SELECT ROWNUM AS rnum, subquery.*
	    FROM (
	        SELECT 
	            u.users_number,
	            COALESCE(n.users_name, c.users_name) AS users_name,
	            u.users_id,
	            COALESCE(n.users_email, c.users_email) AS users_email,
	            COALESCE(n.users_phone, c.users_phone) AS users_phone,
	            u.users_type
	        FROM tbl_users u
	        LEFT JOIN tbl_normal_users n 
	            ON u.users_number = n.users_number
	        LEFT JOIN tbl_care_users c 
	            ON u.users_number = c.users_number
	        ORDER BY u.users_number DESC
	    ) subquery
	) 
	WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 회원 디테일 조회 -->
	<select id="adminUserManagerDetail" parameterType="int" resultType="AdminUserManagerDTO">
		SELECT 
            COALESCE(n.users_name, c.users_name) AS users_name,
            u.users_type,
            u.users_created_date,
            COALESCE(n.users_address_line1, c.users_address_line1) AS users_address_line1,
            COALESCE(n.users_address_line2, c.users_address_line2) AS users_address_line2,
            COALESCE(n.users_phone, c.users_phone) AS users_phone,
            COALESCE(n.users_email, c.users_email) AS users_email,
            u.users_id,
            u.users_password,
            u.users_point
        FROM tbl_users u
        LEFT JOIN tbl_normal_users n 
            ON u.users_number = n.users_number
        LEFT JOIN tbl_care_users c 
            ON u.users_number = c.users_number
        WHERE u.users_number = #{usersNumber}
        ORDER BY u.users_number DESC
	</select>
	
	<!-- 공지사항 조회 -->
	<select id="adminNoticeListSearch" resultType="AdminUserManagerDTO">
	<![CDATA[
	SELECT *
	FROM (
	    SELECT ROWNUM AS rnum, subquery.*
	    FROM (
			SELECT NOTICE_NUMBER , NOTICE_TITLE , ADMIN_NUMBER , NOTICE_VIEW_COUNT , NOTICE_CREATED_DATE 
			FROM TBL_NOTICES
		) subquery
	) 
	WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 공지사항 상세 -->
	<select id="adminNoticeDetail" resultType="AdminUserManagerDTO">
		SELECT NOTICE_NUMBER , NOTICE_TITLE , ADMIN_NUMBER , NOTICE_VIEW_COUNT , NOTICE_CREATED_DATE, NOTICE_CONTENT 
		FROM TBL_NOTICES
	</select>
	
	<!-- 공지사항 등록 -->
	<insert id="adminNoticeListInsert" parameterType="AdminUserManagerDTO">
		<selectKey keyProperty="noticeNumber" resultType="int" order="BEFORE">
			SELECT seq_notices.nextVal FROM DUAL
		</selectKey>
		insert into tbl_notices(notice_number, notice_title, notice_content)
		values(#{noticeNumber} #{noticeTitle}, #{noticeContent})
	</insert>
	
	<!-- 공지사항 수정 -->
	<update id="adminNoticeListUpdate" parameterType="AdminUserManagerDTO">
		update tbl_notices
		set notice_title = #{noticeTitle}, notice_content = #{noticeContent}
		where notice_number = #{noticeNumber}
	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="adminNoticeListDelete" parameterType="int">
		delete from tbl_notices
		where notice_number = #{noticeNumber}
	</delete>
	
	<!-- 신고글 조회 -->
	<select id="adminReportListSelect" resultType="AdminUserManagerDTO">
		SELECT 
		    posts_number,
		    posts_title ,
		    posts_created_date,
		    posts_report_count
		FROM tbl_posts
	</select>
	
	<!-- 신고글 삭제 -->
	<delete id="adminReportListDelete" parameterType="int">
		delete from tbl_posts
		where posts_number = #{postNumber}
	</delete>
	
	<!-- 베너 뉴스 등록 -->
	<insert id="adminNewsBannerInsert" parameterType="AdminUserManagerDTO">
		<selectKey keyProperty="bannerNewsNumber" resultType="int" order="BEFORE">
			SELECT seq_news_banners.nextVal FROM DUAL
		</selectKey>
		insert into tbl_news_banners (banner_news_number, banner_title, banner_created_date, banner_link_url)
		values(#{bannerNewsNumber}, #{bannerTitle}, #{bannerCreatedDate}, #{bannerLinkUrl})
	</insert>
	
	<!-- 베너 뉴스 상세 -->
	<select id="adminNewsBannerDetail" resultType="AdminUserManagerDTO">
		select banner_news_number, banner_title, banner_created_date, bannerImageFilesNumber, banner_link_url
		from tbl_news_banners
	</select>
	
	<!-- 베너 뉴스 조회 -->
	<select id="adminNewsBannerSelect" resultType="AdminUserManagerDTO">
		select banner_news_number, banner_title, banner_created_date
		from tbl_news_banners
	</select>
	
	<!-- 베너 뉴스 수정 -->
	<update id="adminNewsBannerUpdate" parameterType="AdminNewsBannerDTO">
		update tbl_news_banners
		set news_title = #{newsTitle}, news_content = #{newsContent}, news_link_url = #{newsLinkUrl}
		where news_number = #{newsNumber}
	</update>
	
	<!-- 베너 뉴스 삭제 -->
	<delete id="adminNewsBannerDelete" parameterType="int">
		delete from tbl_news
		where news_number = #{newsNumber}
	</delete>
	
	<!-- 문의 조회 -->
	<select id="adminReferenceListSelect" resultType="AdminUserManagerDTO">
		SELECT 
		    r.reference_number,
		    r.reference_title,
		    r.reference_users_number,
		    u.users_id,
		    r.reference_created_date,
		    r.reference_answered_yn
		FROM tbl_reference r
		JOIN tbl_users u 
		     ON r.reference_users_number = u.users_number
		ORDER BY r.reference_number;
	</select>
	
	<!-- 문의 상세 -->
	<select id="adminReferenceDetail" resultType="AdminUserManagerDTO">
		SELECT 
		    r.reference_number,
		    r.reference_title,
		    r.reference_users_number,
		    u.users_id,
		    r.reference_created_date,
		    r.reference_answered_yn
		FROM tbl_reference r
		JOIN tbl_users u 
		     ON r.reference_users_number = u.users_number
	</select>
</mapper>