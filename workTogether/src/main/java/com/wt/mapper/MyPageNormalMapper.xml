<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myPageNormal">
	<!-- 페이지 입장 시 비밀번호 입력 -->
	<select id="checkPw">
		SELECT COUNT(USERS_PASSWORD)
		FROM TBL_USERS
		WHERE USERS_PASSWORD = #{usersPassword}
	</select>

	<!-- 회원정보 조회 -->
	<select id="normalSearch" resultType="NormalModifyDTO">
		SELECT 
			n.USERS_NAME, n.NORMAL_USERS_LEVEL, n.USERS_POSTSAL_CODE, n.USERS_ADDRESS_LINE1, n.USERS_ADDRESS_LINE2,
			n.USERS_PHONE, u.USERS_ID, n.USERS_EMAIL, u.USERS_PASSWORD
		FROM tbl_users u
		JOIN tbl_normal_users n
		  ON u.users_number = n.users_number
		WHERE u.users_id = #{usersId};
	</select>

	<!-- 회원정보 수정 -->
	<update id="normalModify" parameterType="NormalModifyDTO">
		UPDATE tbl_normal_users	n
		SET (
		n.normal_users_level,
		n.users_postsal_code,
		n.users_address_line1,
		n.users_address_line2,
		n.users_email
		) = ( 
		SELECT
			#{normalUsersLevel},
			#{usersPostCode},
			#{usersAddrLine1},
			#{usersAddrLine2}, 
			#{usersEmail}
		FROM dual
		)
	</update>
	
	<!-- 찜한 목록 조회 -->
	<select id="normalfavoriteListSearch" resultType="NormalFavoriteListDTO">
		SELECT 
		    f.favorites_number,   
		    s.shops_number,         
		    f.favorites_created_date,
		    s.shops_name,
		    s.shops_road_address, 
		    s.shops_phone 
		FROM tbl_normal_users n
		JOIN tbl_shops_favorites f
		    ON n.users_number = f.users_number
		JOIN tbl_shops s
		    ON f.favorites_shops_number = s.shops_number;
	    WHERE n.users_number = #{usersNumber}
	</select>
	
	<!-- 찜한 목록 삭제 -->
	<delete id="normalfavoriteListDelete" parameterType="NormalFavoriteListDTO">
		DELETE FROM TBL_SHOPS_FAVORITES f
		WHERE f.favorites_number = #{favoritesNumber}
			AND f.users_number = (
				SELECT u.users_number
		        FROM tbl_users u
		        WHERE u.user_number = #{userNumber}
			);
	</delete>
	
	<!-- 하트 목록 조회 -->
	<select id="normalHeartListSearch" resultType="NormalHeartListDTO">
		
	</select>
	
	<!-- 하트 목록 삭제 -->
	<delete id="normalHeartListDelete">
		
	</delete>
	
	<!-- 매칭 기록 조회 -->
	<select id="normalMatchingSearch" resultType="NormalMatchingDTO">
		SELECT 
		    m.match_date,       
		    c.users_name,    
		    m.match_match_time,
		    m.match_points, 
		    m.match_status     
		FROM tbl_matchings m
		JOIN tbl_care_users c
		    ON m.care_number = c.care_number
	</select>
	
	<!-- 내가 쓴 게시판 목록 조회 -->
	<select id="normalPostsListSearch" parameterType="int" resultType="NormalPostsListDTO">
		SELECT 
		   	nu.users_name,       
		    p.posts_title,       
		    p.posts_created_date 
		FROM tbl_posts p
		JOIN TBL_normal_users u
		    ON p.users_number = nu.users_number
		WHERE p.users_number = #{userNumber};
	</select>
	
	<!-- 내가 쓴 게시판 목록 삭제 -->
	<delete id="normalPostsListDelete" parameterType="NormalPostsListDTO">
		DELETE FROM tbl_posts
		WHERE posts_number = #{postsNumber}
			AND users_number = #{userNumber};
	</delete>
	
	<!-- 문의 등록 -->
	<insert id="normalReferenceInsert" parameterType="NormalReferenceListDTO">
		<selectKey keyProperty="referenceNumber" resultType="int" order="BEFORE">
			SELECT seq_news_banners.nextVal FROM DUAL
		</selectKey>
		INSERT INTO tbl_reference 
		VALUES ( #{referenceNumber}, #{usersNumber},#{referenceTitle}, #{referenceCreatedDate},#{referenceContent}, #{answeredYn})
	</insert>
	
	<!-- 문의 조회 -->
	<select id="normalReferenceListSearch" resultType="NormalReferenceListDTO">
		SELECT 
		    n.users_name,        
		    r.reference_title,        
		    r.reference_created_date, 
		    r.reference_answered_yn  
		FROM tbl_reference r
		JOIN tbl_normal_users n
		    ON r.reference_users_number = n.users_number;
	</select>
	
	<!-- 일반 회원 탈퇴 -->
	<delete id="normalExit" parameterType="int">
		DELETE FROM TBL_NORMAL_USERS
		WHERE users_number = #{userNumber};
	</delete>
</mapper>